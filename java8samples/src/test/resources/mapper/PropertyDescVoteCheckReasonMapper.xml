<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="PropertyDescVoteCheckReasonMapper">

    <sql id="where_Clause">
        <trim prefix="where" prefixOverrides="and|or">
            <if test="propertyDescVoteLineId != null">
                and propertyDescVoteLineId = #{propertyDescVoteLineId, jdbcType=DECIMAL}
            </if>
             <if test="propertyDescVoteLineIds != null and propertyDescVoteLineIds.size() > 0">
             	and propertyDescVoteLineId in 
				<foreach item="tmpPropertyDescVoteLineId" collection="propertyDescVoteLineIds" open="(" separator=" , " close=")">
					#{tmpPropertyDescVoteLineId}
		        </foreach>
            </if>
            <if test="status == null">
            	and status = 0
            </if>
        </trim>
    </sql>

    <select id="list"  resultType="PropertyDescVoteCheckReason">
        SELECT *
		FROM PropertyDescVoteCheckReason with (NOLOCK)	
		<include refid="where_Clause"/>
    </select>

    <insert id="insert" parameterType="PropertyDescVoteCheckReason">
        <selectKey keyProperty="id" resultType="int" order="AFTER">
            select @@IDENTITY
        </selectKey>
        insert into PropertyDescVoteCheckReason
        (
            propertyDescVoteLineId,
            reasonType,
            reason
        )
        values
        (
            #{propertyDescVoteLineId, jdbcType=DECIMAL},
            #{reasonType, jdbcType=VARCHAR},
            #{reason, jdbcType=VARCHAR}
        )
    </insert>
    
    <delete id="deleteByPropertyDescVoteLineId">
    	delete PropertyDescVoteCheckReason where propertyDescVoteLineId = ${propertyDescVoteLineId}
    </delete>

</mapper>